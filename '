
* ****************************************************
* a set of atoms are translated and rotated:
* atom 1 is moved to the origin, atom 2 to the positive
* X-axis & atom 3 to the (+X,+Y) plane.
* ****************************************************
      program rota123
      implicit double precision (a-h,o-z)
      parameter (m1=12)

      common/constants/zero,pi
      CHARACTER (LEN = 400) ich
      CHARACTER (LEN = 400) nmOut 
      character title*30
      dimension iswm(m1), angm(m1)

      zero= 0.d0
      pi= 3.141592654
      frames = 1000

      call inveRota  (hmx,hmy,hmz,iswm,angm)

c      strMDCYC = ADJUSTL(strMDCYC)
C      strSCFCYC = ADJUSTL(strSCFCYC)

      DO i = 1, frames
         
         WRITE(ich,*) i 
         nmOut = TRIM('/home/assusadmin2/Frame/'//TRIM(ich)//'.xyz')
         OPEN(81,FILE=TRIM(nmOut),STATUS='unknown')

         call getData (nmOut)
         call trackrota (hmx,hmy,hmz,iswm,angm,ich)
         call inveRota  (hmx,hmy,hmz,iswm,angm)

      END DO  

      STOP
      end
* *********************************
* get mol info and put it in a common space
* *********************************
      subroutine getData (title)
      implicit double precision (a-h,o-z)
      parameter (m1=10000)

      common/mol1/natoms, name1(m1), name2(2)  ! declare the dimensions
      common/mol2/xmol(m1),ymol(m1),zmol(m1)   ! of the arrays and put
      common/mol3/den(m1)                      ! them in a common space
      common/mol4/x0(m1),y0(m1),z0(m1)

      character name1*4, name2*4, title*30

c      print*
c      write (*,*) "give inputfile"
c      read*, title

c      write (*,*) "give the 3 atoms to work with"
c      read*, i1, i2, i3

      i1 = 11;
      i2 = 7;
      i3 = 1;


C     open (unit=10,file=title,status='unknown')

* --------------------
* read atoms of the molecule
* --------------------

      read (82,*) natoms
      read (82,*)

      write (*,*)
      write (*,*), "------------------------------"
      write (*,*), "original coordinates"

      do j= 1, natoms ! <-------
                                 !
      read (82,*)  name1(j), x0(j), y0(j), z0(j)
c     write (*,12) name1(j), x0(j), y0(j), z0(j)
c     read (10,*)  name1(j), x0(j), y0(j), z0(j), den(j)
                                 !
      name2(j)= name1(j)         !
                                 !
      end do ! <-----------------

      close (10)

* ---------------------------------
* take the chosen atoms as the first 3 atoms
* ---------------------------------

      name1(1)= "He"
       xmol(1)= x0(i1)   ! new atom 1
       ymol(1)= y0(i1)
       zmol(1)= z0(i1)

      name1(2)= "He"
       xmol(2)= x0(i2)   ! new atom 2
       ymol(2)= y0(i2)
       zmol(2)= z0(i2)

      name1(3)= "He"
       xmol(3)= x0(i3)   ! new atom 3
       ymol(3)= y0(i3)
       zmol(3)= z0(i3)

      do j= 1, natoms ! <-------
                                 !
        xmol(j+3)= x0(j)         ! shift coords
        ymol(j+3)= y0(j)         !
        zmol(j+3)= z0(j)         !
                                 !
        name1(j+3)= name2(j)     !
                                 !
      end do ! <-----------------

      natoms= natoms + 3  ! new number of atoms

* also store these atoms in a different array

      do j= 1, natoms ! <--------
                                 !
      x0(j)= xmol(j)             !
      y0(j)= ymol(j)             !
      z0(j)= zmol(j)             !
                                 !
      name2(j)= name1(j)         !
                                 !
      end do ! <-----------------

* --------------------------
* write the first non-rotated
* --------------------------

      do j= 1, 4 ! <-------------
                                 !
      write (*,12) name1(j), xmol(j), ymol(j), zmol(j)
                                 !
      end do ! <-----------------

   12 format (a,3f9.3)

      return
      end !******************************************************
      !******************************************************
!******************************************************
* *************************************
* put atom 1 in the origin, atom 2 in the
* X-axis and atom 3 in the (+X,+Y) plane
* *************************************
      subroutine trackrota (hmx,hmy,hmz,iswm,angm, ich)
      implicit double precision (a-h,o-z)
      parameter (m1=10000, m2=12)

      common/constants/zero,pi
      common/mol1/natoms, name1(m1), name(2)
      common/mol2/xmol(m1),ymol(m1),zmol(m1)

      dimension iswm(m2), angm(m2)

      CHARACTER (LEN = 400) nmIn 

      nmIn = TRIM('/home/assusadmin2/frame/'//TRIM(ich)//'.xyz')
      PRINT*, nmIn
      OPEN(82,FILE=TRIM(nmIn),STATUS='unknown')

* -----------------------------
* initialize translation and rotation parameters
* -----------------------------

      hmx= zero
      hmy= zero
      hmz= zero

      do k= 1, m2
      iswm(k)= 0
      angm(k)= zero
      end do

* ------------------
* rotate the molecule
* ------------------

      call rota (hmx,hmy,hmz,iswm,angm,natoms,xmol,ymol,zmol)

      write (*,*)
      write (*,*) "tracking rotations"
      write (*,*) "switch  active   rotation angle"

      fac= 180./pi  ! factor to change radians to degrees

      do k= 1, m2 ! <-------
                            !
        if (k.eq.1) then    !
        write (*,12) k, iswm(k), angm(k)
        else                !
        write (*,12) k, iswm(k), angm(k) *fac
        end if              !
                            !
      end do ! <------------

* -----------------------------
* write atoms of the rotated molecule
* -----------------------------

      write (81,*) natoms-3
      write (81,*) "molec"

* write to the output file

      write (*,*)
      write (*,*) "first rotated coordinates"

      do j= 1, natoms-3
      if (j.le.4) write (*,14) name1(j), xmol(j), ymol(j), zmol(j)
      write (81,14) name1(j+3), xmol(j+3), ymol(j+3), zmol(j+3)
      end do

   12 format (i4,4x,i4,4x,f10.3)
   14 format (a,3f9.3)

      close (10)

      return
      end
* *************************************
* rotation matrix
* V= (x,y)= r cos(teta) i + r sin(teta) j

* clockwise rotate the vector a quantity phi
* V'= r cos(teta-phi) i + r sin(teta-phi) j

* unfold the trigonometric functions
* V'= r [cos(teta) cos(phi) + sin(teta) sin(phi)] i +
*     + r [sin(teta) cos(phi) - sin(phi) cos(teta)] j

* we recognize the "x" and "y" quantities
* (x',y')= [x cos(phi) + y sin(phi)] i + [y cos(phi) - x sin(phi)] j

* in matrix form
* x' = | cos(phi)  sin(phi)| x
* y'   |-sin(phi)  cos(phi)| y
* *************************************
      subroutine rota (hx,hy,hz,isw,angulo,natoms,xmol,ymol,zmol)
      implicit real*8 (a-h,o-z)
      parameter (m1=10000, m2=12)

      common/constants/zero,pi

      dimension x1(m1), y1(m1), z1(m1)
      dimension x2(m1), y2(m1), z2(m1)
      dimension xmol(m1), ymol(m1), zmol(m1)

      dimension isw(m2), angulo(m2)

* -------------------------
* put atom 1 in the origin
* -------------------------

      hx= xmol(1)
      hy= ymol(1)
      hz= zmol(1)

      do i= 1, natoms
        x1(i)= xmol(i) -hx
        y1(i)= ymol(i) -hy
        z1(i)= zmol(i) -hz
      end do

      isw(1)= 1
      angulo(1)= 0.

* -------------------------
* put atom 2 in the X-axis
* -------------------------

      if (x1(2) .ne. zero) then ! <----------------
                                                   !
* rotate around Z and get atom 2 in the XZ-plane   !
                                                   !
      tetaz= atan (y1(2)/x1(2))                    ! condition to have y2(2)=0
                                                   !
      do i= 1, natoms                              !
        x2(i)=  x1(i)*cos(tetaz)+y1(i)*sin(tetaz)  !
        y2(i)= -x1(i)*sin(tetaz)+y1(i)*cos(tetaz)  ! this coord is zero for atom 2
        z2(i)=  z1(i)                              !
      end do                                       !
                                                   !
* save the action with a label and the angle       !
                                                   !
      isw(2)= 1                                    !
      angulo(2)= tetaz                             !
                                                   !
* atom 2 is in the XZ-plane                        !
* rotate around Y to put atom 2 in the X-axis      !
                                                   !
      if (x2(2) .ne. zero) then                    !
       tetay= atan (z2(2)/x2(2))                   !
      else                                         !
       tetay= pi/2.                                ! if atom 2 is in Z-axis
      end if                                       !
                                                   !
* carry the rotation                               !
                                                   !
      do i= 1, natoms                              !
        x1(i)=  x2(i)*cos(tetay)+z2(i)*sin(tetay)  !
        y1(i)=  y2(i)                              !
        z1(i)= -x2(i)*sin(tetay)+z2(i)*cos(tetay)  ! this coord is zero for atom 2
      end do                                       !
                                                   !
      isw(3)= 1                                    !
      angulo(3)= tetay                             !
                                                   !
* copy working coords                              !
                                                   !
      do i= 1, natoms                              !
       x2(i)= x1(i)                                !
       y2(i)= y1(i)                                !
       z2(i)= z1(i)                                !
      end do                                       !
                                                   !
* atom 2 is in the X-axis                          !
                                             ! ---------
                                                 else
                                             ! ---------
* then atom 2 is in the YZ-plane                   !
                                                   !
      if (y1(2) .ne. zero) then         !----------
                                        !
* rotate around X to get atom 2 in the Y-axis
                                        !
      tetax= atan (z1(2)/y1(2))         !
                                        !
      do i= 1, natoms                   !
        x2(i)=  x1(i)                   !
        y2(i)=  y1(i)*cos(tetax)+z1(i)*sin(tetax)
        z2(i)= -y1(i)*sin(tetax)+z1(i)*cos(tetax)  ! this coord is zero for atom 2
      end do                            !
                                        !
      isw(4)= 1                         !
      angulo(4)= tetax                  !
                                        !
* atom 2 is in the Y-axis               !
* rotate 90 degrees around Z to get atom 2 in the X-axis
                                        !
      do i= 1, natoms                   !
        x1(i)=  x2(i)*cos(pi/2.)+y2(i)*sin(pi/2.)
        y1(i)= -x2(i)*sin(pi/2.)+y2(i)*cos(pi/2.)
        z1(i)=  z2(i)                   !
      end do                            !
                                        !
      isw(5)= 1                         !
      angulo(5)= pi/2.                  !
                                        !
* copy working coords                   !
                                        !
      do i= 1, natoms                   !
       x2(i)= x1(i)                     !
       y2(i)= y1(i)                     !
       z2(i)= z1(i)                     !
      end do                            !
                                        !
* atom 2 is in the X-axis               !
                                        !
                                ! -------------
                                      else
                                ! -------------
                                        !
* then atom 2 is in the Z-axis          !
* rotate pi/2 degrees around Y to get atom 2 in the X-axis
                                        !
      do i= 1, natoms                   !
        x2(i)=  x1(i)*cos(pi/2.)+z1(i)*sin(pi/2.)
        y2(i)=  y1(i)                   !
        z2(i)= -x1(i)*sin(pi/2.)+z1(i)*cos(pi/2.)
      end do                            !
                                        !
      isw(6)= 1                         !
      angulo(6)= pi/2.                  !
                                        !
* copy working coords                   !
                                        !
      do i= 1, natoms                   !
       x1(i)= x2(i)                     !
       y1(i)= y2(i)                     !
       z1(i)= z2(i)                     !
      end do                            !
                                        !
* atom 2 is in the X-axis               !
                                        !
      end if                            !----------
                                                   !
      end if ! <-----------------------------------

* atom 2 is in the X-axis

* --------------------------
* put atom 3 in the (X,Y) plane
* --------------------------

      if (y1(3) .ne. zero) then ! <----
                                       !
* rotate around X to get atom 3 in the XY-plane
                                       !
      tetax= atan (z1(3)/y1(3))        !
                                       !
      do i= 1, natoms, 1               !
        x2(i)=  x1(i)                  !
        y2(i)=  y1(i)*cos(tetax)+z1(i)*sin(tetax)
        z2(i)= -y1(i)*sin(tetax)+z1(i)*cos(tetax) ! this coord is zero for atom 3
      end do                           !
                                       !
      isw(7)= 1                        !
      angulo(7)= tetax                 !
                                       !
* copy working coords                  !
                                       !
      do i= 1, natoms                  !
       x1(i)= x2(i)                    !
       y1(i)= y2(i)                    !
       z1(i)= z2(i)                    !
      end do                           !
                                       !
                                 ! ---------
                                     else
                                 ! ---------
* atom 3 is in the XZ-plane            !
* rotate around Y to get atom 3 in the XY-plane
                                       !
      tetay= atan (z1(3)/x1(3))        !
                                       !
      do i= 1, natoms, 1               !
        x2(i)=  x1(i)*cos(tetay)+z1(i)*sin(tetay)
        y2(i)=  y1(i)                  !
        z2(i)= -x1(i)*sin(tetay)+z1(i)*cos(tetay) ! this coord is zero for atom 3
      end do                           !
                                       !
      isw(8)= 1                        !
      angulo(8)= tetay                 !
                                       !
* copy working coords                  !
                                       !
      do i= 1, natoms                  !
       x1(i)= x2(i)                    !
       y1(i)= y2(i)                    !
       z1(i)= z2(i)                    !
      end do                           !
                                       !
      end if ! <-----------------------

* atom 3 is in the XY-plane

* ----------------------
* put atom 2 in the positive X-axis
* ----------------------

* rotate 180 degrees around Z

      if (x1(2) .lt. zero) then ! < ---
                                       !
      do i= 1, natoms                  !
        x2(i)=  x1(i)*cos(pi)+y1(i)*sin(pi)
        y2(i)= -x1(i)*sin(pi)+y1(i)*cos(pi)
        z2(i)=  z1(i)                  !
      end do                           !
                                       !
* define working coords                !
                                       !
      do i= 1, natoms, 1               !
        x1(i)= x2(i)                   !
        y1(i)= y2(i)                   !
        z1(i)= z2(i)                   !
      end do                           !
                                       !
      isw(9)= 1                        !
      angulo(9)= pi                    !
                                       !
      end if ! <-----------------------

* atom 2 is in the positive X-axis

* ----------------------
* put atom 3 in the (X,+Y) plane
* ----------------------

* rotate 180 degrees around X

      if (y1(3).lt.zero) then ! <------
                                       !
      do i= 1, natoms                  !
        x2(i)=  x1(i)                  !
        y2(i)=  y1(i)*cos(pi)+z1(i)*sin(pi)
        z2(i)= -y1(i)*sin(pi)+z1(i)*cos(pi)
      end do                           !
                                       !
* define working coords                !
                                       !
      do i= 1, natoms, 1               !
        x1(i)= x2(i)                   !
        y1(i)= y2(i)                   !
        z1(i)= z2(i)                   !
      end do                           !
                                       !
      isw(10)= 1                       !
      angulo(10)= pi                   !
                                       !
      end if ! <-----------------------

* atom 3 is in the (X,+Y) plane
* save the rotated coords

      do i= 1, natoms
        xmol(i)= x1(i)
        ymol(i)= y1(i)
        zmol(i)= z1(i)
      end do

      return
      end
* *************************************
* inverse rotation

* if the rotation is given by the equation
* x'= | cos(phi)  sin(phi)| x
* y'  |-sin(phi)  cos(phi)| y

* the inverse transformation is:
* x = |cos(phi) -sin(phi)| x'
* y   |sin(phi)  cos(phi)| y'

* by inserting x',y' in the above expression, we have
* x = |cos(phi) -sin(phi)| | cos(phi)  sin(phi)| x
* y   |sin(phi)  cos(phi)| |-sin(phi)  cos(phi)| y

* the final result is
* x = |1 0| x
* y   |0 1| y
* *************************************
      subroutine inveRota (hx,hy,hz,isw,angulo)
      implicit double precision (a-h,o-z)
      parameter (m1=10000, m2=12)

      common/constants/zero,pi
      common/mol1/natoms, name1(m1), name(2)
      common/mol2/xmol(m1),ymol(m1),zmol(m1)
      common/mol4/x0(m1),y0(m1),z0(m1)

      dimension x1(m1),y1(m1),z1(m1)
      dimension x2(m1),y2(m1),z2(m1)

      dimension isw(m2),angulo(m2)

      write (*,*)
      write (*,*) "carrying the inverse transformation"

* -------------------
* define working coordinates
* -------------------

      do i= 1, natoms
      x2(i)= xmol(i)
      y2(i)= ymol(i)
      z2(i)= zmol(i)

      x1(i)= xmol(i)
      y1(i)= ymol(i)
      z1(i)= zmol(i)
      end do

      fac= 180./pi

* -------------------
* start from last switch down to switch 1
* the inverse transformation applies when
* the switch is different to 0
* -------------------

      if (isw(10) .ne. zero) then ! <---
        teta= angulo(10)                !
        do i= 1, natoms                 !
        x1(i)= x2(i)                    !
        y1(i)= y2(i)*cos(teta)-z2(i)*sin(teta)
        z1(i)= y2(i)*sin(teta)+z2(i)*cos(teta)
                                        !
        x2(i)= x1(i)                    !
        y2(i)= y1(i)                    !
        z2(i)= z1(i)                    !
        end do                          !
        write (*,12) 'switch 10', isw(10), teta*fac
                                        !
      end if ! <------------------------


      if (isw(9) .ne. zero) then ! <----
        teta= angulo(9)                 !
        do i= 1, natoms                 !
        x1(i)= x2(i)*cos(teta)-y2(i)*sin(teta)
        y1(i)= x2(i)*sin(teta)+y2(i)*cos(teta)
        z1(i)= z2(i)                    !
                                        !
        x2(i)= x1(i)                    !
        y2(i)= y1(i)                    !
        z2(i)= z1(i)                    !
        end do                          !
        write (*,12) 'switch  9', isw(9), teta*fac
                                        !
      end if ! <------------------------

      if (isw(8) .ne. zero) then ! <----
        teta= angulo(8)                 !
        do i= 1, natoms                 !
        x2(i)= x1(i)*cos(teta)-z1(i)*sin(teta)
        y2(i)= y1(i)                    !
        z2(i)= x1(i)*sin(teta)+z1(i)*cos(teta)
                                        !
        x1(i)= x2(i)                    !
        y1(i)= y2(i)                    !
        z1(i)= z2(i)                    !
        end do                          !
        write (*,12) 'switch  8', isw(8), teta*fac
                                        !
      end if ! <------------------------

      if (isw(7) .ne. zero) then ! <----
        teta= angulo(7)                 !
        do i= 1, natoms                 !
        x2(i)= x1(i)                    !
        y2(i)= y1(i)*cos(teta)-z1(i)*sin(teta)
        z2(i)= y1(i)*sin(teta)+z1(i)*cos(teta)
                                        !
        x1(i)= x2(i)                    !
        y1(i)= y2(i)                    !
        z1(i)= z2(i)                    !
        end do                          !
        write (*,12) 'switch  7', isw(7), teta*fac
                                        !
      end if ! <------------------------

      if (isw(6) .ne. zero) then ! <----
        teta= angulo(6)                 !
        do i= 1, natoms                 !
        x2(i)= x1(i)*cos(teta)-z1(i)*sin(teta)
        y2(i)= y1(i)                    !
        z2(i)= x1(i)*sin(teta)+z1(i)*cos(teta)
                                        !
        x1(i)= x2(i)                    !
        y1(i)= y2(i)                    !
        z1(i)= z2(i)                    !
        end do                          !
        write (*,12) 'switch  6', isw(6), teta*fac
                                        !
      end if ! <------------------------

      if (isw(5) .ne. zero) then ! <----
        teta= angulo(5)                 !
        do i= 1, natoms                 !
        x1(i)= x2(i)*cos(teta)-y2(i)*sin(teta)
        y1(i)= x2(i)*sin(teta)+y2(i)*cos(teta)
        z1(i)= z2(i)                    !
                                        !
        x2(i)= x1(i)                    !
        y2(i)= y1(i)                    !
        z2(i)= z1(i)                    !
        end do                          !
        write (*,12) 'switch  5', isw(5), teta*fac
                                        !
      end if ! <------------------------

      if (isw(4) .ne. zero) then ! <----
        teta= angulo(4)                 !
        do i= 1, natoms                 !
        x2(i)= x1(i)                    !
        y2(i)= y1(i)*cos(teta)-z1(i)*sin(teta)
        z2(i)= y1(i)*sin(teta)+z1(i)*cos(teta)
                                        !
        x1(i)= x2(i)                    !
        y1(i)= y2(i)                    !
        z1(i)= z2(i)                    !
        end do                          !
        write (*,12) 'switch  4', isw(4), teta*fac
                                        !
      end if ! <------------------------

      if (isw(3) .ne. zero) then ! <----
        teta= angulo(3)                 !
        do i= 1, natoms                 !
        x1(i)= x2(i)*cos(teta)-z2(i)*sin(teta)
        y1(i)= y2(i)                    !
        z1(i)= x2(i)*sin(teta)+z2(i)*cos(teta)
                                        !
        x2(i)= x1(i)                    !
        y2(i)= y1(i)                    !
        z2(i)= z1(i)                    !
        end do                          !
        write (*,12) 'switch  3', isw(3), teta*fac
                                        !
      end if ! <------------------------

      if (isw(2) .ne. zero) then ! <----
        teta= angulo(2)                 !
        do i= 1, natoms                 !
        x2(i)= x1(i)*cos(teta)-y1(i)*sin(teta)
        y2(i)= x1(i)*sin(teta)+y1(i)*cos(teta)
        z2(i)= z1(i)                    !
                                        !
        x1(i)= x2(i)                    !
        y1(i)= y2(i)                    !
        z1(i)= z2(i)                    !
        end do                          !
        write (*,12) 'switch  2', isw(2), teta*fac
                                        !
      end if ! <------------------------

* -------------------
* rotated coordinates are finally translated and stored
* -------------------

      write (*,*)
      write (*,*) "inverse rotated coordinates"

      do i= 1, natoms ! <----
      x1(i)= x2(i) +hx       !
      y1(i)= y2(i) +hy       !
      z1(i)= z2(i) +hz       !
                             !
      x2(i)= x1(i)           !
      y2(i)= y1(i)           !
      z2(i)= z1(i)           !
                             !
c     write (*,14) name1(i), x1(i), y1(i), z1(i)
                             !
      end do ! <-------------

      write (*,*) "checking the reversed rotation (should be zero)"

      do i= 1, 4 ! <---------
                             !
      write (*,14) name1(i), x0(i)-x1(i), y0(i)-y1(i), z0(i)-z1(i)
                             !
      end do ! <-------------

   12 format (a,i4,f9.3)
   14 format (a,3f9.3)

      return
      end
* ********************
* input file as an example

* 6
* mol
* A   1.37908424    -2.19811233    -0.16304826
* B   1.54972069    -1.91463429     0.83231047
* C   2.20749643    -1.09670150     1.82852490
* D   2.44295762    -2.87498501    -0.16927200
* E   1.93065287    -1.55589125    -0.78218539
* F   0.42680104    -2.52314003    -0.46007555

